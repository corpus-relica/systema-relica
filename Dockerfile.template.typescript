# =============================================================================
# STANDARDIZED TYPESCRIPT SERVICE DOCKERFILE TEMPLATE
# =============================================================================
# This template supports all TypeScript services in the Systema Relica monorepo
# Usage: Replace {{SERVICE_NAME}}, {{SERVICE_PORT}}, and uncomment {{DEPENDENCIES}} 
# =============================================================================

# -----------------------------------------------------------------------------
# BUILD STAGE
# -----------------------------------------------------------------------------
FROM node:18-alpine AS build

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Ensure yarn is available
RUN corepack enable

WORKDIR /usr/src/app

# Copy workspace configuration
COPY package.json yarn.lock ./

# Copy shared packages (always needed)
COPY packages/websocket-contracts ./packages/websocket-contracts

# Copy conditional shared packages based on service needs
# Uncomment the packages your service depends on:
# COPY packages/types ./packages/types
# COPY packages/constants ./packages/constants  
# COPY packages/hsm-manager ./packages/hsm-manager
# COPY packages/websocket-clients ./packages/websocket-clients

# Copy service-specific source
COPY packages/{{SERVICE_NAME}} ./packages/{{SERVICE_NAME}}

# Install all dependencies (including devDependencies for build)
RUN yarn install --frozen-lockfile --non-interactive

# Build shared packages in dependency order
RUN cd packages/websocket-contracts && yarn build
# Uncomment as needed:
# RUN cd packages/types && yarn build
# RUN cd packages/constants && yarn build
# RUN cd packages/hsm-manager && yarn build
# RUN cd packages/websocket-clients && yarn build

# Build the service
RUN cd packages/{{SERVICE_NAME}} && yarn build

# -----------------------------------------------------------------------------
# RUNTIME STAGE
# -----------------------------------------------------------------------------
FROM node:18-alpine AS runtime

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S relica -u 1001

# Install runtime dependencies
RUN apk add --no-cache \
    curl \
    && rm -rf /var/cache/apk/*

# Ensure yarn is available
RUN corepack enable

WORKDIR /usr/src/app

# Copy workspace configuration
COPY package.json yarn.lock ./

# Copy built shared packages with proper ownership
COPY --from=build --chown=relica:nodejs /usr/src/app/packages/websocket-contracts/package.json ./packages/websocket-contracts/package.json
COPY --from=build --chown=relica:nodejs /usr/src/app/packages/websocket-contracts/dist ./packages/websocket-contracts/dist

# Copy conditional shared packages (uncomment as needed):
# COPY --from=build --chown=relica:nodejs /usr/src/app/packages/types/package.json ./packages/types/package.json
# COPY --from=build --chown=relica:nodejs /usr/src/app/packages/types/dist ./packages/types/dist
# COPY --from=build --chown=relica:nodejs /usr/src/app/packages/constants/package.json ./packages/constants/package.json
# COPY --from=build --chown=relica:nodejs /usr/src/app/packages/constants/dist ./packages/constants/dist
# COPY --from=build --chown=relica:nodejs /usr/src/app/packages/hsm-manager/package.json ./packages/hsm-manager/package.json
# COPY --from=build --chown=relica:nodejs /usr/src/app/packages/hsm-manager/dist ./packages/hsm-manager/dist
# COPY --from=build --chown=relica:nodejs /usr/src/app/packages/websocket-clients/package.json ./packages/websocket-clients/package.json
# COPY --from=build --chown=relica:nodejs /usr/src/app/packages/websocket-clients/dist ./packages/websocket-clients/dist

# Copy service built artifacts
COPY --from=build --chown=relica:nodejs /usr/src/app/packages/{{SERVICE_NAME}}/package.json ./packages/{{SERVICE_NAME}}/package.json
COPY --from=build --chown=relica:nodejs /usr/src/app/packages/{{SERVICE_NAME}}/dist ./packages/{{SERVICE_NAME}}/dist

# Copy service source files if needed for development
# For production, comment out the next line
COPY --chown=relica:nodejs packages/{{SERVICE_NAME}} ./packages/{{SERVICE_NAME}}

# Install production dependencies only
RUN yarn install --frozen-lockfile --non-interactive --production && \
    yarn cache clean

# Set proper ownership
RUN chown -R relica:nodejs /usr/src/app

# Switch to non-root user
USER relica

# Set working directory to service
WORKDIR /usr/src/app/packages/{{SERVICE_NAME}}

# Expose service port
EXPOSE {{SERVICE_PORT}}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:{{SERVICE_PORT}}/health || exit 1

# Environment variables
ENV NODE_ENV=production
ENV PORT={{SERVICE_PORT}}

# Start the service
CMD ["node", "dist/main.js"]

# =============================================================================
# DEVELOPMENT OVERRIDE
# =============================================================================
# For development, override the CMD:
# CMD ["yarn", "start:dev"]
# And set NODE_ENV=development

# =============================================================================
# SERVICE-SPECIFIC CONFIGURATIONS
# =============================================================================
# 
# Portal (port 2204):
#   - Only needs websocket-contracts (already included)
#
# Archivist (port 3000):
#   - Uncomment: types, constants, hsm-manager
#
# Clarity (port 3001):  
#   - Uncomment: types, constants
#
# Aperture (port 3002):
#   - Only needs websocket-contracts (already included)
#
# Shutter (port 3004):
#   - Only needs websocket-contracts (already included)
#
# Prism (port 3005):
#   - Uncomment: types, constants
#
# =============================================================================
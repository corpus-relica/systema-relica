version: "3.8"

services:
  # ================================
  # Database Layer (unchanged)
  # ================================
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    command: /bin/sh -c "redis-server --requirepass redis"
    volumes:
      - ./packages/dataplex/data/redis:/data
    ports:
      - "6379:6379"
    networks:
      - rlc-net
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M

  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    command: ["bash", "/docker-entrypoint-initdb.d/init-postgres.sh"]
    volumes:
      - ./packages/dataplex/data/postgres:/var/lib/postgresql/data
      - ./packages/dataplex/init_scripts/postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - rlc-net
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.2"
          memory: 256M

  neo4j:
    container_name: neo4j
    image: neo4j:5.12.0
    restart: always
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_security_procedures_unrestricted="apoc.*"
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.\\\\\\*,gds.\\\\\\*
      - dbms_connector_bolt_listen__address=neo4j-db:7687
      - dbms_connector_bolt_advertised__address=neo4j-db:7687
      - NEO4J_apoc_import_file_enabled="true"
      - NEO4J_apoc_export_file_enabled="true"
      - NEO4J_ACCEPT_LICENSE_AGREEMENT="yes"
    volumes:
      - ./packages/dataplex/data/neo4j:/data
      - ./seed_csv:/var/lib/neo4j/import
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "cypher-shell -u neo4j -p password 'MATCH (n) RETURN COUNT(n);' || exit 1",
        ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - rlc-net
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.3"
          memory: 512M

  # ================================
  # Unified Backend Container (NEW)
  # ================================
  backend:
    container_name: systema-relica-backend
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: always
    environment:
      # AI API Keys (optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      # JWT Secret
      - JWT_SECRET=${JWT_SECRET:-development-secret-change-in-production}
    volumes:
      # Mount seed data directories
      - ./seed_xls:/usr/src/app/seed_xls
      - ./seed_csv:/usr/src/app/seed_csv
      # Development hot reload (optional - remove in production)
      - ./packages:/usr/src/app/packages
      - ./packages_py:/usr/src/app/packages_py
      - ./ecosystem.config.js:/usr/src/app/ecosystem.config.js
    ports:
      # All backend service ports
      - "2204:2204"  # Portal (main API gateway)
      - "3000:3000"  # Archivist  
      - "3001:3001"  # Clarity
      - "3002:3002"  # Aperture
      - "3004:3004"  # Shutter
      - "3005:3005"  # Prism
      - "3006:3006"  # NOUS
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      neo4j:
        condition: service_healthy
    networks:
      - rlc-net
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 4G
        reservations:
          cpus: "1.0"
          memory: 1G

  # ================================
  # Frontend Container (unchanged)
  # ================================
  knowledge-integrator:
    container_name: knowledge-integrator
    build:
      context: .
      dockerfile: Dockerfile.knowledge-integrator
    restart: always
    command: yarn dev
    volumes:
      - ./packages/knowledge-integrator:/usr/src/app/packages/knowledge-integrator
      - ./packages/constants:/usr/src/app/packages/constants
      - ./packages/fact-search-ui:/usr/src/app/packages/fact-search-ui
      - ./packages/3d-graph-ui:/usr/src/app/packages/3d-graph-ui
      - ./packages/hsm-manager:/usr/src/app/packages/hsm-manager
      - /usr/src/app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_ESBUILD_MAX_BUFFER=8388608
    depends_on:
      - backend
    networks:
      rlc-net:
        aliases:
          - knowledge-integrator
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2G
        reservations:
          cpus: "0.5"
          memory: 512M

networks:
  rlc-net:
    name: rlc-net
    driver: bridge
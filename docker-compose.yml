version: "3.8"

services:
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    command: /bin/sh -c "redis-server --requirepass redis"
    volumes:
      - ./packages_ts/core/dataplex/data/redis:/data
    ports:
      - "6379:6379"
    networks:
      - rlc-net

  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    command: ["bash", "/docker-entrypoint-initdb.d/init-postgres.sh"]
    volumes:
      - ./packages_ts/core/dataplex/data/postgres:/var/lib/postgresql/data
      - ./packages_ts/core/dataplex/init_scripts/postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - rlc-net

  neo4j:
    container_name: neo4j
    image: neo4j:5.12.0
    restart: always
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_connector_bolt_advertised__address=neo4j:7687
      - NEO4J_dbms_connector_bolt_listen__address=0.0.0.0:7687
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - ./packages_ts/core/dataplex/data/neo4j:/data
      - ./seed_csv:/var/lib/neo4j/import:rw
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "cypher-shell -u neo4j -p password 'MATCH (n) RETURN COUNT(n);' || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rlc-net

  archivist:
    container_name: archivist
    build:
      context: ./
      dockerfile: Dockerfile.archivist
    restart: always
    environment:
      - NEO4J_HOST=neo4j
      - NEO4J_PORT=7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password

      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_USER=default
      - REDIS_PASSWORD=redis

      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    command: ["clojure", "-M:dev"]
    # command: ["yarn", "start:dev"]
    volumes:
      - ./packages_ts/backend/archivist:/usr/src/app/packages_ts/backend/archivist
      - ./seed_xls:/usr/src/app/packages_ts/backend/archivist/seed_xls:ro
      - ./seed_csv:/usr/src/app/packages_ts/backend/archivist/seed_csv:rw
      - /usr/src/app/packages_ts/backend/archivist/node_modules
    ports:
      - "3000:3000"
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_started
      postgres:
        condition: service_started
    networks:
      - rlc-net

  # clarity-core:
  #   container_name: clarity-core
  #   # image: node:latest
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile.clarity-core
  #   # working_dir: /usr/src/app
  #   restart: always
  #   environment:
  #     - RELICA_CLARITY_CORE_ALLOWED_ORIGIN=*
  #     - RELICA_CLARITY_CORE_API_PORT=3001

  #     - RELICA_POSTGRES_HOST=postgres
  #     - RELICA_POSTGRES_USER=postgres
  #     - RELICA_POSTGRES_PASSWORD=password
  #     - RELICA_POSTGRES_DB_NAME=postgres
  #     - RELICA_POSTGRES_PORT=5432
  #     - RELICA_NEO4J_URL=http://localhost:3000

  #   # command: sh -c "npm install && npx tsc --outDir dist && npm start"
  #   # command: sh -c "yarn install && yarn dev"
  #   command: ["yarn", "start:dev"]
  #   volumes:
  #     - ./packages_ts/backend/clarity-core:/usr/src/app/packages_ts/backend/clarity-core
  #     - /usr/src/app/packages_ts/backend/clarity-core/node_modules
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - archivist
  #   networks:
  #     rlc-net:
  #       aliases:
  #         - clarity-core

  clarity:
    container_name: clarity
    build:
      context: ./
      dockerfile: Dockerfile.clarity-clj
    restart: always
    command: ["clojure", "-M:dev"]
    # command: ["clojure", "-M:run"]
    volumes:
      - ./packages_clj/clarity:/usr/src/app/packages_clj/clarity
      - /usr/src/app/.m2
    ports:
      - "2176:2176"
      # nREPL port
      - "7892:7892"
      # - "5555:5555"
    environment:
      - ARCHIVIST_HOST=archivist
      - ARCHIVIST_PORT=3000
    depends_on:
      - archivist
    networks:
      rlc-net:
        aliases:
          - clarity

  aperture:
    container_name: aperture
    build:
      context: ./
      dockerfile: Dockerfile.aperture
    restart: always
    command: ["clojure", "-M:dev"]
    volumes:
      - ./packages_clj/aperture:/usr/src/app/packages_clj/aperture
      - /usr/src/app/.m2
    ports:
      - "2175:2175"
      # nREPL port
      - "7891:7891"
    environment:
      - ARCHIVIST_HOST=archivist
      - ARCHIVIST_PORT=3000
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - JWT_SECRET=changeme
    depends_on:
      - postgres
      - archivist
    networks:
      rlc-net:
        aliases:
          - aperture

  portal:
    container_name: portal
    build:
      context: ./
      dockerfile: Dockerfile.portal
    restart: always
    command: ["clojure", "-M:dev"]
    volumes:
      - ./packages_clj/portal:/usr/src/app/packages_clj/portal
      - /usr/src/app/.m2
    ports:
      - "2174:2174"
      # nREPL port
      - "7890:7890"
    environment:
      - JWT_SECRET=changeme
      - ARCHIVIST_HOST=archivist
      - ARCHIVIST_PORT=3000
      - CLARITY_HOST=clarity
      - CLARITY_PORT=2176
      - APERTURE_HOST=aperture
      - APERTURE_PORT=2175
    depends_on:
      #   - shutter
      - archivist
      - clarity
      - aperture
    networks:
      rlc-net:
        aliases:
          - portal

  shutter:
    container_name: shutter
    build:
      context: ./
      dockerfile: Dockerfile.shutter
    restart: always
    command: ["clojure", "-M:dev"]
    volumes:
      - ./packages_clj/shutter:/usr/src/app/packages_clj/shutter
      - /usr/src/app/.m2
    ports:
      - "2173:2173"
      # nREPL port
      - "7889:7889"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - JWT_SECRET=changeme
    depends_on:
      - postgres
    networks:
      rlc-net:
        aliases:
          - shutter

  knowledge-integrator:
    container_name: knowledge-integrator
    build:
      context: .
      dockerfile: Dockerfile.knowledge-integrator
    restart: always
    ports:
      - "80:80" # or whatever port you prefer
    depends_on:
      - archivist
      - clarity
    networks:
      rlc-net:
        aliases:
          - knowledge-integrator

networks:
  rlc-net:
    name: rlc-net
    driver: bridge

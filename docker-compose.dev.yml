version: "3.8"

services:
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    command: /bin/sh -c "redis-server --requirepass redis"
    volumes:
      - ./packages_ts/core/dataplex/data/redis:/data
    ports:
      - "6379:6379"
    # No network defined to use default bridge with localhost access

  postgres:
    container_name: postgres
    build:
      context: ./packages_ts/core/dataplex/docker
      dockerfile: Dockerfile.postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    command: ["bash", "/docker-entrypoint-initdb.d/init-postgres.sh"]
    volumes:
      - ./packages_ts/core/dataplex/data/postgres:/var/lib/postgresql/data
      - ./packages_ts/core/dataplex/init_scripts/postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    # No network defined to use default bridge with localhost access

  neo4j:
    container_name: neo4j
    image: neo4j:5.12.0
    restart: always
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      # Use localhost instead of container names
      - NEO4J_dbms_connector_bolt_advertised__address=localhost:7687
      - NEO4J_dbms_connector_bolt_listen__address=0.0.0.0:7687
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - ./packages_ts/core/dataplex/data/neo4j:/data
      - ./seed_csv:/var/lib/neo4j/import:rw
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "cypher-shell -u neo4j -p password 'MATCH (n) RETURN COUNT(n);' || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    # No network defined to use default bridge with localhost access

  prism:
    container_name: prism
    build:
      context: ./packages_clj/prism
      dockerfile: docker/Dockerfile.dev
    restart: always
    environment:
      - PRISM_NEO4J_URI=neo4j+s://localhost:7687 # Use localhost
      - PRISM_NEO4J_USER=neo4j
      - PRISM_NEO4J_PASSWORD=password
      - PRISM_SEED_XLS_DIR=/seed_xls
      - PRISM_CSV_OUTPUT_DIR=/import # Must match Neo4j's import volume
      - PRISM_NEO4J_IMPORT_DIR=/import # Neo4j needs this to find the CSVs
      - PRISM_LOG_LEVEL=info # Or debug
      - PRISM_API_PORT=3333
      - PRISM_API_HOST=0.0.0.0
      # Use localhost for other services
      - ARCHIVIST_HOST=localhost
      - ARCHIVIST_PORT=3000
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_USER=default
      - REDIS_PASSWORD=redis
    ports:
      - "3333:3333"  # Expose the API port to the host for setup UI access
      - "7893:7893"  # nREPL port
    volumes:
      # Mount code for hot reloading
      - ./packages_clj/common:/usr/src/app/packages_clj/common
      - ./packages_clj/prism:/usr/src/app/packages_clj/prism
      # Mount seed data
      - ./seed_xls:/seed_xls:ro
      - ./seed_csv:/import:rw
    depends_on:
      neo4j:
        condition: service_healthy

  archivist:
    container_name: archivist
    build:
      context: ./packages_clj/archivist
      dockerfile: docker/Dockerfile.dev
    restart: always
    environment:
      # Use localhost for dependencies
      - NEO4J_HOST=localhost
      - NEO4J_PORT=7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_USER=default
      - REDIS_PASSWORD=redis
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    command: ["clojure", "-M:dev"]
    volumes:
      # Mount code for hot reloading
      - ./packages_clj/common:/usr/src/app/packages_clj/common
      - ./packages_clj/archivist:/usr/src/app/packages_clj/archivist
      # Mount seed data
      - ./seed_xls:/usr/src/app/packages_clj/archivist/seed_xls:ro
      - ./seed_csv:/usr/src/app/packages_clj/archivist/seed_csv:rw
    ports:
      - "3000:3000"
      - "7890:7890"  # nREPL port
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_started
      postgres:
        condition: service_started

  clarity:
    container_name: clarity
    build:
      context: ./packages_clj/clarity
      dockerfile: docker/Dockerfile.dev
    restart: always
    command: ["clojure", "-M:dev"]
    volumes:
      # Mount code for hot reloading
      - ./packages_clj/common:/usr/src/app/packages_clj/common
      - ./packages_clj/clarity:/usr/src/app/packages_clj/clarity
    ports:
      - "2176:2176"
      - "7892:7892"  # nREPL port
    environment:
      # Use localhost for dependencies
      - ARCHIVIST_HOST=localhost
      - ARCHIVIST_PORT=3000
    depends_on:
      - archivist

  aperture:
    container_name: aperture
    build:
      context: ./packages_clj/aperture
      dockerfile: docker/Dockerfile.dev
    restart: always
    command: ["clojure", "-M:dev"]
    volumes:
      # Mount code for hot reloading
      - ./packages_clj/common:/usr/src/app/packages_clj/common
      - ./packages_clj/aperture:/usr/src/app/packages_clj/aperture
    ports:
      - "2175:2175"
      - "7891:7891"  # nREPL port
    environment:
      # Use localhost for dependencies
      - ARCHIVIST_HOST=localhost
      - ARCHIVIST_PORT=3000
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - JWT_SECRET=changeme
    depends_on:
      - postgres
      - archivist

  portal:
    container_name: portal
    build:
      context: ./packages_clj/portal
      dockerfile: docker/Dockerfile.dev
    restart: always
    command: ["clojure", "-M:dev"]
    volumes:
      # Mount code for hot reloading
      - ./packages_clj/common:/usr/src/app/packages_clj/common
      - ./packages_clj/portal:/usr/src/app/packages_clj/portal
    ports:
      - "2174:2174"
      - "7890:7890"  # nREPL port
    environment:
      - JWT_SECRET=changeme
      # Use localhost for dependencies
      - ARCHIVIST_HOST=localhost
      - ARCHIVIST_PORT=3000
      - CLARITY_HOST=localhost
      - CLARITY_PORT=2176
      - APERTURE_HOST=localhost
      - APERTURE_PORT=2175
      - NOUS_HOST=localhost
      - NOUS_PORT=2204
      - PRISM_HOST=localhost
      - PRISM_PORT=3333
    depends_on:
      - shutter
      - archivist
      - clarity
      - aperture
      - prism

  nous:
    container_name: nous
    build:
      context: ./packages_py/nous
      dockerfile: docker/Dockerfile.dev
    restart: always
    command: ["python", "main.py"]
    volumes:
      # Mount code for hot reloading
      - ./packages_py/nous:/usr/src/app/packages_py/nous
    ports:
      - "2204:2204"
    environment:
      - PYTHONPATH=/usr/src/app
      - PYTHONUNBUFFERED=1
      # Use localhost for dependencies
      - CLARITY_HOST=localhost
      - CLARITY_PORT=2176
      - APERTURE_HOST=localhost
      - APERTURE_PORT=2175
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      - clarity
      - aperture

  shutter:
    container_name: shutter
    build:
      context: ./packages_clj/shutter
      dockerfile: docker/Dockerfile.dev
    restart: always
    command: ["clojure", "-M:dev"]
    volumes:
      # Mount code for hot reloading
      - ./packages_clj/shutter:/usr/src/app/packages_clj/shutter
    ports:
      - "2173:2173"
      - "7889:7889"  # nREPL port
    environment:
      # Use localhost for dependencies
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - JWT_SECRET=changeme
    depends_on:
      - postgres

  viewfinder:
    container_name: viewfinder
    build:
      context: ./packages_ts/frontend/viewfinder
      dockerfile: docker/Dockerfile.dev
    restart: always
    ports:
      - "5173:5173"  # Vite dev server port
    volumes:
      # Mount all necessary code for hot reloading
      - ./packages_ts/frontend/viewfinder:/usr/src/app/packages_ts/frontend/viewfinder
      - ./packages_ts/frontend/components:/usr/src/app/packages_ts/frontend/components
      - ./packages_ts/libs:/usr/src/app/packages_ts/libs
      - ./packages_ts/config:/usr/src/app/packages_ts/config
      - ./node_modules:/usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      # Connect to local services
      - VITE_RELICA_ARCHIVIST_API_URL=http://localhost:3000
      - VITE_RELICA_CC_API_URL=http://localhost:2176
      - VITE_RELICA_CC_SOCKET_URL=ws://localhost:2176
      - VITE_PORTAL_API_URL=http://localhost:2174
      - VITE_PORTAL_WS_URL=ws://localhost:2174
      - VITE_SHUTTER_API_URL=http://localhost:2173
      - VITE_RELICA_NOUS_SOCKET_URL=ws://localhost:2204
    depends_on:
      - archivist
      - clarity
      - portal
      - shutter

# No custom network - using default bridge network to allow localhost access
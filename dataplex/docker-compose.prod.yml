version: "3.8"

services:
  neo4j:
    image: neo4j:5.12.0
    container_name: neo4j
    volumes:
      - ./data/neo4j:/data
    environment:
      - NEO4J_AUTH=${RELICA_NEO4J_USER}/${RELICA_NEO4J_PASSWORD}
      - NEO4J_dbms_security_procedures_unrestricted="apoc.*"
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.\*,gds.\*
      - dbms_connector_bolt_listen__address=neo4j-db:7687
      - dbms_connector_bolt_advertised__address=neo4j-db:7687
      - NEO4J_apoc_import_file_enabled="true"
      - NEO4J_apoc_export_file_enabled="true"
      - NEO4J_ACCEPT_LICENSE_AGREEMENT="yes"
    restart: always
    networks:
      - rlc-net

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - ./data/redis:/data
    user: redis
    restart: always
    command: /bin/sh -c "redis-server --requirepass ${RELICA_REDIS_PASSWORD}"
    networks:
      - rlc-net

  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./init_scripts/postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${RELICA_POSTGRES_USER}
      POSTGRES_PASSWORD: ${RELICA_POSTGRES_PASSWORD}
    restart: always
    networks:
      - rlc-net

networks:
  rlc-net:
    name: rlc-net
    driver: bridge
